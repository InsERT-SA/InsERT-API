<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="EmailAddressAttribute" xml:space="preserve">
    <value>Pole {0} nie jest poprawnym adresem e-mail.</value>
  </data>
  <data name="NIPAttribute" xml:space="preserve">
    <value>Pole {0} nie jest poprawnym numerem NIP.</value>
  </data>
  <data name="PhoneAttribute" xml:space="preserve">
    <value>Pole {0} nie jest poprawnym numerem telefonu.</value>
  </data>
  <data name="RequiredAttribute" xml:space="preserve">
    <value>Pole {0} jest wymagane.</value>
  </data>
  <data name="RequiredConsentMessage" xml:space="preserve">
    <value>Zgłoszenie serwisowe nie może zostać wysłane bez wyrażenia zgody na przetwarzanie danych osobowych.</value>
  </data>
  <data name="RequiredIfAttribute" xml:space="preserve">
    <value>Pole {0} jest wymagane.</value>
  </data>
  <data name="ServiceRegistrationClientConsent" xml:space="preserve">
    <value>Oświadczam, że zapoznałam/-em się z poniższymi informacjami i wyrażam zgodę na przetwarzanie moich danych osobowych we wskazanych poniżej celach i zakresie:</value>
  </data>
  <data name="ServiceRegistrationClientConsentMore" xml:space="preserve">
    <value>Informujemy, że administratorem Pani/Pana danych osobowych jest {0} z siedzibą: {1}. Podane przez Panią/Pana dane osobowe będą przetwarzane przez Administratora w celu świadczenia przez Administratora usług serwisowych. Podanie danych osobowych jest dobrowolne, jednak niezbędne do wykonywania w/w czynności. Pomimo dobrowolności, konsekwencją niepodania danych osobowych będzie brak możliwości wykonywania w/w czynności.

W związku z udzieloną przez Panią/Pana zgodą, podstawą prawną przetwarzania podanych przez Panią/Pana danych osobowych jest przepis art. 6 ust 1 lit. a ROZPORZĄDZENIA PARLAMENTU EUROPEJSKIEGO I RADY (UE) 2016/679 z dnia 27 kwietnia 2016 r. w sprawie ochrony osób fizycznych w związku z przetwarzaniem danych osobowych i w sprawie swobodnego przepływu takich danych oraz uchylenia dyrektywy 95/46/WE.

Dane osobowe będą przetwarzane w w/w celach do czasu wycofania przez Panią/Pana zgody. Ma Pani/Pan prawo do wniesienia skargi do organu nadzorczego w zakresie ochrony danych osobowych, jeśli uzna Pani/Pan, że przetwarzanie danych osobowych przez administratora narusza przepisy o ochronie danych osobowych. Przetwarzane przez nas Panią/Pana dane osobowe nie będą przekazywane do Państw trzecich. Pani/Pana dane nie będą przetwarzane w sposób zautomatyzowany i nie będą profilowane.

Przysługuje Pani/Panu prawo dostępu do treści swoich danych osobowych oraz prawo do ich sprostowania, usunięcia lub ograniczenia przetwarzania, prawo do przenoszenia danych oraz prawo do cofnięcia zgody w dowolnym momencie bez wpływu na zgodność z prawem przetwarzania, którego dokonano na podstawie Pani/Pana zgody przed jej cofnięciem.</value>
  </data>
  <data name="StringConstantLengthAttribute" xml:space="preserve">
    <value>Pole {0} musi zawierać {1} znaków.</value>
  </data>
  <data name="StringMinAndMaxLengthAttribute" xml:space="preserve">
    <value>Liczba znaków w polu {0} musi zawierać się w przedziale {2}-{1}.</value>
  </data>
  <data name="StringOnlyMaxLengthAttribute" xml:space="preserve">
    <value>Maksymalna długość w polu {0} wynosi {1} znaków.</value>
  </data>
</root>